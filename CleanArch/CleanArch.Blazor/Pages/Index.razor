@page "/"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Components.NavigationManager navigation
@using CleanArch.Application.Services
@using CleanArch.Application.ViewModels
@using AutoMapper.QueryableExtensions;
@inject ProductService service;

<AuthorizeView>
    <Authorized>
        <div class="container">
            <div class="row bg-light">
                <table class="table table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Product Id</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Delete Product</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ProductViewModel.Any())
                        {
                            @foreach (var product in ProductViewModel)
                            {
                                int Id = @product.Id;
                                <tr>
                                    <td>@product.Id</td>
                                    <td>@product.Name</td>
                                    <td>@product.Price</td>
                                    <td>@product.Quantity</td>
                                    <td>

                                        <a href='/AddProduct/@product.Id' class="btn btn-outline-dark" role="button"> Edit </a>
                                        <a class="btn btn-outline-danger" role="button" @onclick="(async () => await Delete(Id))"> Delete </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="6"><strong>No products available</strong></td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        you are not allowed to view please login first
    </NotAuthorized>
</AuthorizeView>
@code {
    List<ProductViewModel> ProductViewModel = new List<ProductViewModel>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }

    private async Task RefreshProducts()
    {
        ProductViewModel = await Http.GetFromJsonAsync<List<ProductViewModel>>("https://localhost:7119/Product");
    }
    protected async Task Delete(int Id)
    {
        await Http.DeleteAsync("https://localhost:7119/Product?Id=" + Id);
        await RefreshProducts();
    }
}