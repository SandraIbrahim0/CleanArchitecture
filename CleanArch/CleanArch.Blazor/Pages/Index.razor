@page "/"
@*@using CleanArch.Application.Interfaces*@
@using CleanArch.Application.Services
@using CleanArch.Application.ViewModels
@using AutoMapper.QueryableExtensions;
@inject ProductService service;

<AuthorizeView>
 <Authorized>
<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Product Id</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Delete Product</th>
                </tr>
            </thead>
            <tbody>
                @if (ProductViewModel.Any())
                {
                    @foreach (var product in ProductViewModel)
                    {
                        <tr>
                            <td>@product.Id</td>
                            <td>@product.Name</td>
                            <td>@product.Price</td>
                            <td>@product.Quantity</td>
                            <td><button class="btn btn-danger" >Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No products available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
</div>
</Authorized>
<NotAuthorized>
    you are not allowed to view please login first
</NotAuthorized>
</AuthorizeView>
@code {
    List<ProductViewModel> ProductViewModel = new List<ProductViewModel>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }
    private async Task RefreshProducts()
    {
        var result = await service.Get();
        ProductViewModel = result.ToList();
    }
  
}